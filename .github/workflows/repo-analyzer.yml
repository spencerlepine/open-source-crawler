name: 🧐 Repo Analyzer

on:
  workflow_dispatch:
  # Run job every day at 1:00pm
  # schedule:
  #             # https://crontab.guru/
  #             #   ┌───────────── minute (0 - 59)
  #             # │ ┌───────────── hour (0 - 23)
  #             # │ │ ┌───────────── day of the month (1 - 31)
  #             # │ │ │ ┌───────────── month (1 - 12 or JAN-DEC)
  #             # │ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
  #             # │ │ │ │ │
  #             # │ │ │ │ │
  #             # │ │ │ │ │
  #             # * * * * *
  #   - cron:  '0 13 * * *'

jobs:
  execute_analyzer:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: ⚡️ Invoke Repo Analyzer Function Lambda
        id: lambdaInvocation
        uses: gagoar/invoke-aws-lambda@master
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          FunctionName: ${{ github.event.repository.name }}-prod-fetchAnalyzeRepoQueue
          # Payload: '{ "myParameter": false }'

      - name: 📝 Store response payload to file
        if: always()
        run: echo '${{ fromJSON(steps.lambdaInvocation.outputs.response).Payload }}' > invocation-response.json

      - name: ⬆️ Upload Lambda output
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: lambda-output
          path: invocation-response.json

      - name: ✂️ Extract repository URL from previous step
        if: always()
        run: echo ::set-output name=repoUrl::$(cat invocation-response.json | jq . | jq .body.repoUrl | tr -d '"' 2>&1)
        id: lambdaOutputExtraction

      - name: ⬇️ Checkout external repository
        uses: actions/checkout@v3
        with:
          repository: ${{ steps.lambdaOutputExtraction.outputs.repoUrl }}

      # preform code scan
      # https://github.com/marketplace/actions/codacy-analysis-cli
      - name: ✅ Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@master

      - name: 📁 Check README file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "README.md"

      # preform TYPO scan
      # https://github.com/crate-ci/typos
      - name: 🚫 Check spelling of README
        if: steps.check_files.outputs.files_exists == 'true'
        uses: crate-ci/typos@master
        with: 
          files: ./README.md

      - name: ✏️ Generate analysis report
        run: |
          mkdir output
          cd output
          cat > metadata.txt
          echo ${{ steps.lambdaOutputExtraction.outputs.repoUrl }} >> metadata.txt
          date >> metadata.txt
          cat > report.md
          echo '## ${{ steps.lambdaOutputExtraction.outputs.repoUrl }}' >> report.md

      - name: 🚚 Push report to store repository
        uses: cpina/github-action-push-to-another-repository@main
        env:
          # SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
          API_TOKEN_GITHUB: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          source-directory: output
          destination-github-username: spencerlepine
          destination-repository-name: ${{ secrets.CONTRIBUTION_STORE_REPO }}
          target-directory: ${{ steps.lambdaOutputExtraction.outputs.repoUrl }}
          user-email: spencerlepine26@gmail.com
          target-branch: main
